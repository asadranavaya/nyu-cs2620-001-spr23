/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package dist_mat_mr;

import java.io.File;
import java.io.IOException;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;

public class App_final_mr_task {
    public static void main(String[] args) throws IOException, ClassNotFoundException, InterruptedException {
        // final Configuration conf = new Configuration();
        // final Job job = Job.getInstance(conf, "Initial Node join and map to first
        // part of distance matrix data");

        Job job = Job.getInstance();
        job.setJarByClass(App_final_mr_task.class);
        job.setJobName("Final Node join and map to get final distance matrix data");
        final Path inputPath = new Path(args[0]);
        FileInputFormat.addInputPath(job, inputPath);
        final File file = new File(inputPath.toString() + "_MappedOutput");
        FileOutputFormat.setOutputPath(job, new Path(file.getPath()));
        job.setMapperClass(final_mapper.class);
        job.setMapOutputKeyClass(IntWritable.class);
        job.setReducerClass(final_reducer.class);
        // Let dynamically choose number of reducers, can -getmerge later
        // job.setNumReduceTasks(1);
        job.waitForCompletion(true);

    }
}
